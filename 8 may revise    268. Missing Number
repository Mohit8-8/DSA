#268. Missing Number

#Brute Force solution:
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        for(int i = 1; i <= nums.size(); i++) {
            int flag = 0;
            for(int j = 0; j < nums.size(); j++) {
                if(nums[j] == i) {
                    flag = 1;
                    break;
                }
            }
            if(flag == 0) {
                return i;
            }
        }
        return 0; 
    }
};



#Optimized code 
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n = nums.size();
        vector<int> hash(n + 1, 0);  

        for(int i = 0; i < n; i++) {  
            hash[nums[i]] = 1;
        }

        for(int i = 0; i <= n; i++) {  
            if(hash[i] == 0) {
                return i;
            }
        }

        return -1; 
    }
};


#Best code
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n =nums.size();
        int ans=0;
        for(int i=1;i<=n;i++){
            ans=ans^i;
        }
        for(int i=0;i<n;i++){
            ans=ans^nums[i];
        }
        return ans;

    }
};
